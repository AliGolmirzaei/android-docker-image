image: your android build image

variables:
  # memory limitations you might have. if you don't remove these lines
  _JAVA_OPTIONS: "-Xmx4096m -XX:-UseGCOverheadLimit -XX:+UseConcMarkSweepGC"
  JACK_SERVER_VM_ARGUMENTS: "-Dfile.encoding=UTF-8 -XX:+TieredCompilation -Xmx4096m"

cache:
 key: "gradle"
 paths:
 - .gradle/

stages:
  - test
  - staging_release
  - production_release
  - publish


lintCheck:
  stage: test
  rules:
    - if: $CI_COMMIT_BRANCH == "develop"
  script:
    - ./gradlew  -Pci --console=plain lint -PbuildDir=lint --priority low

unitTest:
  stage: test
  rules:
    - if: $CI_COMMIT_BRANCH == "develop"
  script:
    - ./gradlew -Pci --console=plain test --priority low

instrumentTest:
  stage: test
  rules:
    - if: $CI_COMMIT_BRANCH == "develop"
  script:
    - start_emulator.sh
    - ./gradlew -Pci --console=plain connectedAndroidTest --priority low

staging_release:
  stage: staging_release
  rules:
    - if: $CI_COMMIT_BRANCH == "develop"
  script:
    - echo $TEST_KEYSTORE | base64 -d > my.keystore
    - ./gradlew assembleDebug
      -Pandroid.injected.signing.store.file=$(pwd)/my.keystore
      -Pandroid.injected.signing.store.password=android
      -Pandroid.injected.signing.key.alias=androiddebugkey
      -Pandroid.injected.signing.key.password=android
      --priority low
    - mkdir apks
    - find ./app/build/outputs/ -name '*.apk' -exec cp '{}' './apks/' ';'
  artifacts:
    paths:
      - apks
    expire_in: 1 day

production_release:
  stage: production_release
  rules:
    - if: $CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+/
  script:
    - project_version=$(./gradlew -q printVersionName)
    - if [ "$CI_COMMIT_TAG" != "v$project_version" ]; then echo "app version name mismatch with tag name"; exit 1; fi
    - echo $PRODUCTION_KEYSTORE | base64 -d > my.keystore
    - ./gradlew assembleRelease
      -Pandroid.injected.signing.store.file=$(pwd)/my.keystore
      -Pandroid.injected.signing.store.password=$(echo $KEYSTORE_PASSWORD | base64 -d)
      -Pandroid.injected.signing.key.alias=$KEY_ALIAS
      -Pandroid.injected.signing.key.password=$KEY_PASSWORD
      --priority low
    - mkdir apks
    - find ./app/build/outputs/ -name '*.apk' -exec cp '{}' './apks/' ';'
    - ./gradlew bundleRelease
      -Pandroid.injected.signing.store.file=$(pwd)/my.keystore
      -Pandroid.injected.signing.store.password=$(echo $KEYSTORE_PASSWORD | base64 -d)
      -Pandroid.injected.signing.key.alias=$KEY_ALIAS
      -Pandroid.injected.signing.key.password=$KEY_PASSWORD
      --priority low
    - mkdir bundles
    - find ./app/build/outputs/ -name '*.aab' -exec cp '{}' './bundles/' ';'
  artifacts:
    paths:
      - apks
      - bundles
    expire_in: 1 day

    
publish_to_google:
  stage: publish
  rules:
    - if: $CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+/
      when: manual
  script:
    - python3 publish.py "com.example" "./apks/production.apk"


